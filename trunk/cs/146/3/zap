#!/bin/bash

FORCE=no
SIGNAL=

TEST='1'

function augmentTest
{
    TEST="($TEST) && ($1)"
}

   pid=1
   cpu=2
   uid=3
 uname=4
  time=5
memory=6

oldOPTIND=1

while getopts :u:fc:t:m: option
do
    case $option in
        f)  FORCE=yes                              ;;
        c)  augmentTest     "\$$cpu    >= $OPTARG" ;;
        t)  augmentTest     "\$$time   >= $OPTARG" ;;
        m)  augmentTest     "\$$memory >= $OPTARG" ;;
        u)  lastArgNumber=$((OPTIND-1))
            if [ "${!lastArgNumber}" = -uid ]
            then
                augmentTest "\$$uid    == \"${!OPTIND}\""
                ((OPTIND++))
            else
                augmentTest "\$$uname  == \"$OPTARG\""
            fi                                     ;;
        *)  if [ $oldOPTIND -eq $OPTIND ]
            then
                SIGNAL=${!OPTIND   }
                ((OPTIND++))
            else
                SIGNAL=${!oldOPTIND}
            fi
    esac
    oldOPTIND=$OPTIND
done

PIDS=`ps -e -o pid= -o pcpu= -o uid= -o user= -o etime= -o pmem= | awk "{ if ($TEST) print \\$$pid }"`

if [ $FORCE = yes ]
then
    kill $SIGNAL $PIDS
else
    for pid in $PIDS
    do
        psOut="`ps -fp $pid`"
        if [ "`printf '%s\n' "$psOut" | wc -l`" -eq 2 ]
        then
            printf '%s\n' "$psOut"
            printf 'Kill process? [y/N/q] '
            read kill
            case $kill in
                [Yy]*) kill $SIGNAL $pid
                    ;;
                [Qq]*) break
            esac
        fi
    done
fi
